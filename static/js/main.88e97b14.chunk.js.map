{"version":3,"sources":["BookList.js","BooksAPI.js","ShowSearchPage.js","App.js","index.js"],"names":["BookList","state","value","handleBookShelf","book","shelf","_this","props","onUpdateBook","handleSubmitShelf","_this2","this","books","react_default","a","createElement","className","map","key","id","style","width","height","backgroundImage","concat","imageLinks","thumbnail","onChange","e","target","disabled","title","authors","react_router_dom","to","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","SearchBooks","query","updateQuery","setState","trim","foundBooks","match","RegExp","excapeRegExp","filter","test","type","placeholder","BooksApp","updateShelf","BooksApi","data","_this3","react_router","exact","path","render","src_BookList","_ref","history","ShowSearchPage","onSearchBook","push","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.88e97b14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nclass BookList extends Component {\r\n  state = {\r\n    value: \"\" // currently reading, want to read, read\r\n  };\r\n\r\n  handleBookShelf = (book, value) => {\r\n    const shelf = value;\r\n\r\n    if (this.props.onUpdateBook) {\r\n      this.props.onUpdateBook(book, shelf);\r\n    }\r\n    //const { shelf } = book;\r\n  };\r\n  // handleBookShelf = (e) => {\r\n  //   this.setState({ value: e.target.value });\r\n  // };\r\n\r\n  handleSubmitShelf = () => {};\r\n\r\n  render() {\r\n    const { books } = this.props;\r\n\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {books.map(\r\n                    book =>\r\n                      book.shelf === \"currentlyReading\" && (\r\n                        <li key={book.id}>\r\n                          <div className=\"book\">\r\n                            <div className=\"book-top\">\r\n                              <div\r\n                                className=\"book-cover\"\r\n                                style={{\r\n                                  width: 128,\r\n                                  height: 193,\r\n                                  backgroundImage: `url(\"${\r\n                                    book.imageLinks.thumbnail\r\n                                  }\")`\r\n                                }}\r\n                              />\r\n                              <div className=\"book-shelf-changer\">\r\n                                <select\r\n                                  value={this.state.value}\r\n                                  onChange={e =>\r\n                                    this.handleBookShelf(book, e.target.value)\r\n                                  }\r\n                                >\r\n                                  <option value=\"move\" disabled>\r\n                                    Move to...\r\n                                  </option>\r\n                                  <option value=\"none\">None</option>\r\n                                  <option value=\"currentlyReading\">\r\n                                    Currently Reading\r\n                                  </option>\r\n                                  <option value=\"wantToRead\">\r\n                                    Want to Read\r\n                                  </option>\r\n                                  <option value=\"read\">Read</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"book-title\">{book.title}</div>\r\n                            <div className=\"book-authors\">{book.authors}</div>\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                  )}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {books.map(\r\n                    book =>\r\n                      book.shelf === \"wantToRead\" && (\r\n                        <li key={book.id}>\r\n                          <div className=\"book\">\r\n                            <div className=\"book-top\">\r\n                              <div\r\n                                className=\"book-cover\"\r\n                                style={{\r\n                                  width: 128,\r\n                                  height: 193,\r\n                                  backgroundImage: `url(\"${\r\n                                    book.imageLinks.thumbnail\r\n                                  }\")`\r\n                                }}\r\n                              />\r\n                              <div className=\"book-shelf-changer\">\r\n                                <select\r\n                                  value={this.state.value}\r\n                                  onChange={e =>\r\n                                    this.handleBookShelf(book, e.target.value)\r\n                                  }\r\n                                >\r\n                                  <option value=\"move\" disabled>\r\n                                    Move to...\r\n                                  </option>\r\n                                  <option value=\"none\">None</option>\r\n                                  <option value=\"currentlyReading\">\r\n                                    Currently Reading\r\n                                  </option>\r\n                                  <option value=\"wantToRead\">\r\n                                    Want to Read\r\n                                  </option>\r\n                                  <option value=\"read\">Read</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"book-title\">{book.title}</div>\r\n                            <div className=\"book-authors\">{book.authors}</div>\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                  )}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {books.map(\r\n                    book =>\r\n                      book.shelf === \"read\" && (\r\n                        <li key={book.id}>\r\n                          <div className=\"book\">\r\n                            <div className=\"book-top\">\r\n                              <div\r\n                                className=\"book-cover\"\r\n                                style={{\r\n                                  width: 128,\r\n                                  height: 193,\r\n                                  backgroundImage: `url(\"${\r\n                                    book.imageLinks.thumbnail\r\n                                  }\")`\r\n                                }}\r\n                              />\r\n                              <div className=\"book-shelf-changer\">\r\n                                <select\r\n                                  value={this.state.value}\r\n                                  onChange={e =>\r\n                                    this.handleBookShelf(book, e.target.value)\r\n                                  }\r\n                                >\r\n                                  <option value=\"move\" disabled>\r\n                                    Move to...\r\n                                  </option>\r\n                                  <option value=\"none\">None</option>\r\n                                  <option value=\"currentlyReading\">\r\n                                    Currently Reading\r\n                                  </option>\r\n                                  <option value=\"wantToRead\">\r\n                                    Want to Read\r\n                                  </option>\r\n                                  <option value=\"read\">Read</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"book-title\">{book.title}</div>\r\n                            <div className=\"book-authors\">{book.authors}</div>\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                  )}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Link to=\"./search\" className=\"open-search\">\r\n          Add a book\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookList;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n  token = localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token\r\n};\r\n\r\nexport const get = bookId =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json());\r\n\r\nexport const search = query =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ query })\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport excapeRegExp from \"escape-string-regexp\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport \"./App.css\";\r\n\r\nclass SearchBooks extends Component {\r\n  state = {\r\n    query: \"\"\r\n  };\r\n\r\n  updateQuery = query => {\r\n    this.setState({ query: query.trim() });\r\n  };\r\n\r\n  render() {\r\n    const { books } = this.props;\r\n    const { query } = this.state;\r\n\r\n    let foundBooks;\r\n    if (query) {\r\n      const match = new RegExp(excapeRegExp(query), \"i\");\r\n      foundBooks = books.filter(book => match.test(book.title));\r\n    } else {\r\n      foundBooks = books;\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              value={this.state.query}\r\n              onChange={e => this.updateQuery(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {foundBooks.map(book => (\r\n              <li key={book.id}>\r\n                <div className=\"book\">\r\n                  <div className=\"book-top\">\r\n                    <div\r\n                      className=\"book-cover\"\r\n                      style={{\r\n                        width: 128,\r\n                        height: 193,\r\n                        backgroundImage: `url(\"${book.imageLinks.thumbnail}\")`\r\n                      }}\r\n                    />\r\n                    <div className=\"book-shelf-changer\">\r\n                      <select>\r\n                        <option value=\"move\" disabled>\r\n                          Move to...\r\n                        </option>\r\n                        <option value=\"currentlyReading\">\r\n                          Currently Reading\r\n                        </option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\">None</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"book-title\">{book.title}</div>\r\n                  <div className=\"book-authors\">{book.authors}</div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooks;\r\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport BookList from \"./BookList\";\nimport SearchBooks from \"./ShowSearchPage\";\nimport * as BooksApi from \"./BooksAPI\";\n\nclass BooksApp extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    BooksApi.getAll().then(books => {\n      this.setState({ books });\n    });\n  }\n\n  updateShelf = (book, shelf) => {\n    BooksApi.update(book, shelf);\n    // .then(data => data.book)\n    //.then(res => console.log(res));\n    // .then(() => {\n    //   this.setState(state => ({\n    //     books: state.books\n    //   }));\n    // });\n  };\n\n  // componentDidUpdate() {\n  //   BooksApi.getAll().then(books => {\n  //     this.setState({ books });\n  //   });\n  // }\n\n  // componentDidUpdate(prevProps) {\n  //   if (prevProps === this.props.books) {\n  //     this.setState({ books: prevProps });\n  //   }\n  // }\n\n  // shouldComponentUpdate() {\n  //   BooksApi.getAll().then(books => {\n  //     this.setState({ books });\n  //   });\n  //   return true;\n  // }\n\n  render() {\n    return (\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <BookList\n              books={this.state.books}\n              onUpdateBook={(book, shelf) => {\n                this.updateShelf(book, shelf);\n              }}\n            />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={({ history }) => (\n            <SearchBooks\n              books={this.state.books}\n              onSearchBook={() => history.push(\"/\")}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}